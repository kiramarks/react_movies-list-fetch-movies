{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","axios","defaults","baseURL","FindMovie","addMovie","addingError","useState","searchInput","setSearchInput","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","error","setError","errorTitle","setErrorTitle","isPreviewReady","setPreviewReady","isFilmAdded","setAddingStatus","saveInputValue","useCallback","e","target","value","htmlFor","type","id","placeholder","cN","input","onChange","onBlur","length","trim","onClick","preventDefault","get","API_URL","split","join","then","res","data","Error","Title","Plot","Poster","imdbID","disabled","App","setMovies","setAddingError","some","el","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a51e9c9f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import axios from 'axios';\n\nexport default axios.defaults.baseURL = 'http://www.omdbapi.com/?apikey=e33a3ed5';\n","import React, { FC, useCallback, useState } from 'react';\nimport './FindMovie.scss';\n\nimport axios from 'axios';\nimport cN from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport API_URL from '../../api/api';\n\nexport const FindMovie: FC<FindMovieProps> = ({ addMovie, addingError }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [error, setError] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [isPreviewReady, setPreviewReady] = useState(false);\n  const [isFilmAdded, setAddingStatus] = useState(false);\n\n  const saveInputValue = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchInput(e.target.value);\n      setError(false);\n      setErrorTitle(false);\n    }, [setSearchInput],\n  );\n\n  const handleSearch = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    axios.get(`${API_URL}&t=${searchInput.split(' ').join('+')}`)\n      .then(res => {\n        if (res.data.Error) {\n          setError(true);\n\n          return;\n        }\n\n        setTitle(res.data.Title);\n        setDescription(res.data.Plot);\n        setImgUrl(res.data.Poster);\n        setImdbUrl(`https://www.imdb.com/title/${res.data.imdbID}`);\n        setImdbId(res.data.imdbID);\n        setPreviewReady(true);\n        setAddingStatus(false);\n      });\n  };\n\n  const onBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.id === 'movie-title') {\n      if (searchInput.length === 0\n        || searchInput.trim() === '') {\n        setErrorTitle(true);\n      } else {\n        setErrorTitle(false);\n      }\n    }\n  };\n\n  const handleAddingToList = () => {\n    if (!error && title.trim().length > 0) {\n      addMovie({\n        title, description, imgUrl, imdbUrl, imdbId,\n      });\n      setSearchInput('');\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n      setAddingStatus(true);\n      setPreviewReady(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={searchInput}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cN({\n                input: true,\n                'is-danger': error,\n              })}\n              onChange={saveInputValue}\n              onBlur={onBlur}\n            />\n          </div>\n\n          {errorTitle && (\n            <p className=\"help is-danger\">\n              Please, write a title\n            </p>\n          )}\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddingToList}\n              disabled={!isPreviewReady}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {addingError\n      && (\n        <div className=\"adding-error-container\">\n          <p className=\"adding-error\">\n            This film has been already added\n          </p>\n        </div>\n      )}\n\n      {isPreviewReady\n      && !isFilmAdded\n      && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            title={title}\n            description={description}\n            imgUrl={imgUrl}\n            imdbUrl={imdbUrl}\n            imdbId={imdbId}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const [addingError, setAddingError] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(el => el.imdbId === movie.imdbId)) {\n      setAddingError(true);\n    } else {\n      setMovies(state => ([...state, movie]));\n      setAddingError(false);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          addingError={addingError}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}