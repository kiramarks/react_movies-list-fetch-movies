{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","components/FindMovie/useFindMovie.ts","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","axios","defaults","baseURL","FindMovie","props","addMovie","addingError","useState","searchInput","setSearchInput","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","error","setError","errorTitle","setErrorTitle","isPreviewReady","setPreviewReady","isFilmAdded","setAddingStatus","saveInputValue","useCallback","e","target","value","handleSearch","preventDefault","get","API_URL","split","join","then","res","data","Error","Title","Plot","Poster","imdbID","onBlur","id","length","trim","handleAddingToList","useFindMovie","htmlFor","type","placeholder","cN","input","onChange","onClick","disabled","App","setMovies","setAddingError","find","el","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bacb167.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import axios from 'axios';\n\nexport default axios.defaults.baseURL = 'https://www.omdbapi.com/?apikey=e33a3ed5';\n","import React, { FC } from 'react';\nimport './FindMovie.scss';\n\nimport cN from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { useFindMovie } from './useFindMovie';\n\nexport const FindMovie: FC<FindMovieProps> = (props) => {\n  const {\n    searchInput,\n    error,\n    saveInputValue,\n    handleSearch,\n    onBlur,\n    handleAddingToList,\n    addingError,\n    errorTitle,\n    isPreviewReady,\n    isFilmAdded,\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = useFindMovie(props);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={searchInput}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cN({\n                input: true,\n                'is-danger': error,\n              })}\n              onChange={saveInputValue}\n              onBlur={onBlur}\n            />\n          </div>\n\n          {errorTitle && (\n            <p className=\"help is-danger\">\n              Please, write a title\n            </p>\n          )}\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddingToList}\n              disabled={!isPreviewReady}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {addingError\n      && (\n        <div className=\"adding-error-container\">\n          <p className=\"adding-error\">\n            This film has been already added\n          </p>\n        </div>\n      )}\n\n      {isPreviewReady\n      && !isFilmAdded\n      && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            title={title}\n            description={description}\n            imgUrl={imgUrl}\n            imdbUrl={imdbUrl}\n            imdbId={imdbId}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport axios from 'axios';\nimport API_URL from '../../api/api';\n\nexport const useFindMovie = ({ addMovie, addingError }: FindMovieProps) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [error, setError] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [isPreviewReady, setPreviewReady] = useState(false);\n  const [isFilmAdded, setAddingStatus] = useState(false);\n\n  const saveInputValue = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchInput(e.target.value);\n      setError(false);\n      setErrorTitle(false);\n    }, [],\n  );\n\n  const handleSearch = useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n\n    axios.get(`${API_URL}&t=${searchInput.split(' ').join('+')}`)\n      .then(res => {\n        if (res.data.Error) {\n          setError(true);\n\n          return;\n        }\n\n        setTitle(res.data.Title);\n        setDescription(res.data.Plot);\n        setImgUrl(res.data.Poster);\n        setImdbUrl(`https://www.imdb.com/title/${res.data.imdbID}`);\n        setImdbId(res.data.imdbID);\n        setPreviewReady(true);\n        setAddingStatus(false);\n      });\n  }, [searchInput]);\n\n  const onBlur = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.id === 'movie-title') {\n      if (searchInput.length === 0\n        || searchInput.trim() === '') {\n        setErrorTitle(true);\n      } else {\n        setErrorTitle(false);\n      }\n    }\n  }, [searchInput]);\n\n  const handleAddingToList = useCallback(() => {\n    if (!error && title.trim().length > 0) {\n      addMovie({\n        title, description, imgUrl, imdbUrl, imdbId,\n      });\n      setSearchInput('');\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n      setAddingStatus(true);\n      setPreviewReady(false);\n    }\n  }, [addMovie, title, description, imgUrl, imdbUrl, imdbId, error]);\n\n  return {\n    searchInput,\n    error,\n    saveInputValue,\n    handleSearch,\n    onBlur,\n    handleAddingToList,\n    addingError,\n    errorTitle,\n    isPreviewReady,\n    isFilmAdded,\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const [addingError, setAddingError] = useState(false);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.find(el => el.imdbId === movie.imdbId)) {\n      setAddingError(true);\n    } else {\n      setMovies(state => ([...state, movie]));\n      setAddingError(false);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          addingError={addingError}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}